{"version":3,"sources":["assets/images/workinprogress.jpg","assets/images/KL.jpg","assets/images/Bascom.jpg","assets/images/Music.jpg","assets/images/NatPark.jpg","assets/images/StarCraft.jpg","Header.js","AppJumbotron.js","InfoRow.js","Footer.js","HomePage.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","React","Component","AppJumbotron","props","componentDidMount","typed","Typed","ghostWriterRef","current","strings","typeSpeed","backSpeed","loop","createRef","this","destroy","id","fluid","ref","AboutMePic","require","BascomPic","MusicPic","TravelPic","StarCraftPic","InfoRow","src","Body","Title","Text","Footer","Display","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2edb865c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/workinprogress.572fba3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/KL.eb702e32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Bascom.382b1f4f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Music.745f56b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/NatPark.73c5ae39.jpg\";","module.exports = __webpack_public_path__ + \"static/media/StarCraft.d1b8aab3.jpg\";","import React from 'react';\nimport './Header.css'\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <div className=\"Header\">\n                <div className=\"My-Name\">\n                    <a href=\"#page-top\">\n                        <b>Leon Tan</b>\n                    </a>\n                </div>\n                <div>\n                    <ul className=\"NavBar\">\n                        <li className=\"Header-Item\">\n                            <a href=\"#AboutMe-row\">\n                                <b>About Me</b>\n                            </a>\n                        </li>\n                        <li className=\"Header-Item\">\n                            <a href=\"#Academics-row\">\n                                <b>Academics</b>\n                            </a>\n                        </li>\n                        <li className=\"Header-Item\">\n                            <a href=\"#Interests-row\">\n                                <b>Interests</b>\n                            </a>\n                        </li>\n                        <li className=\"Header-Item\">\n                            <a>\n                                <b>Resume</b>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default Header;","import React from 'react'\nimport Typed from 'typed.js';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\n\nimport './AppJumbotron.css'\n\nclass AppJumbotron extends React.Component {\n    constructor(props) {\n        super(props);\n        // Note: Regular JavaScript way.\n        // const ghostWriterDOMElement = document.getElementsByClassName(\"ghost-writer\")[0];\n\n        // Note: React way\n        this.ghostWriterRef = React.createRef();\n    }\n\n    componentDidMount = () => {\n        var options = {\n            strings: ['<b>Hello!</b>', '<b>My name is Leon Tan</b>', '<b>Welcome to my personal website</b>', '<b>Scroll down to learn more about me!</b>'],\n            typeSpeed: 50,\n            backSpeed: 50,\n            loop: true,\n        };\n        // Note: Regular JavaScript way\n        // this.typed = new Typed(ghostWriterDOMElement, options);\n        this.typed = new Typed(this.ghostWriterRef.current, options);\n    }\n\n    componentWillUnmount() {\n      // Make sure to destroy Typed instance on unmounting\n      // to prevent memory leaks\n      this.typed.destroy();\n    }\n\n    render() {\n        return (\n            <div className=\"AppJumbotron\" id=\"page-top\">\n                <Jumbotron className=\"jumbotron-custom\" fluid>\n                    <Container>\n                        <div className=\"ghost-writer\" ref={this.ghostWriterRef}></div>\n                    </Container>\n                </Jumbotron>\n            </div>\n        )\n    }\n}\n\nexport default AppJumbotron","import React from 'react'\nimport Card from 'react-bootstrap/Card'\nimport Image from 'react-bootstrap/Image'\nimport Button from 'react-bootstrap/Button'\nimport './InfoRow.css'\n\n\nconst PATH_TO_IMG = require('./assets/images/workinprogress.jpg')\nconst AboutMePic = require('./assets/images/KL.jpg')\nconst BascomPic = require('./assets/images/Bascom.jpg')\nconst MusicPic = require('./assets/images/Music.jpg')\nconst TravelPic = require('./assets/images/NatPark.jpg')\nconst StarCraftPic = require('./assets/images/StarCraft.jpg')\n\nclass InfoRow extends React.Component {\n    render() {\n        return(\n            <div className=\"InfoRow\">\n                <Card className=\"InfoRow-Card Card-Left\" id=\"AboutMe-row\">\n                    <div className=\"image-container\">\n                    <Image className=\"InfoRow-Card-Image\" src={AboutMePic} />\n                    </div>\n                    \n                    <Card.Body className=\"InfoRow-Card-Content\">\n                        <Card.Title className=\"Card-Title\"><b>About Me</b></Card.Title>\n                        <Card.Text>\n                            I was born and raised in Kuala Lumpur, Malaysia.\n                            Kuala Lumpur is a unique and vibrant multicultural city in South East Asia.\n                            Growing up there has given me the privilege to learn and interact with\n                            people from different background and identity.\n                        </Card.Text>\n                        <Card.Text>\n                            On August of 2015, I came to the United States to pursue my Undergraduate degree.\n                            I ended up in Madison, Wisconsin and has been living here ever since.\n                        </Card.Text>\n                        {/* <Button variant=\"primary\">Find out more!</Button> */}\n                    </Card.Body>\n                </Card>\n                <Card className=\"InfoRow-Card Card-Right\" id=\"Academics-row\">\n                    <Card.Body className=\"InfoRow-Card-Content\">\n                        <Card.Title className=\"Card-Title\"><b>Academics</b></Card.Title>\n                        <Card.Text>\n                            I am currently pursuing a Bachelor's Degree at University of Wisconsin - Madison.\n                            I double major in Computer Science and Biology and will be graduating in December of 2019.\n                        </Card.Text>\n                        {/* <Button variant=\"primary\">Find out more!</Button> */}\n                    </Card.Body>\n                    <div className=\"image-container\">\n                    <Image className=\"InfoRow-Card-Image\" src={BascomPic} />\n                    </div>\n                </Card>\n                <Card className=\"InfoRow-Card Card-Left\" id=\"Interests-row\">\n                    <div className=\"image-container image-container-small\">\n                    <Image className=\"InfoRow-Card-Image\" src={MusicPic} />\n                    </div>\n                    <Card.Body className=\"InfoRow-Card-Content InfoRow-Card-Content-Small\">\n                        <Card.Title className=\"Card-Title\"><b>Interests - Music</b></Card.Title>\n                        <Card.Text>\n                            Although I major in STEM, I love art as well and have a great appreciation for it.\n                            Of all the different forms of art available, music is my favourite.\n                            Listening to music is my favorite way to relax and spend my free time.\n                            The music genre that I most frequently listen to are Hip Hop, RnB and Soul.\n                        </Card.Text>\n                        {/* <Button variant=\"primary\">Find out more!</Button> */}\n                    </Card.Body>\n                </Card>\n                <Card className=\"InfoRow-Card Card-Right\">\n                    <Card.Body className=\"InfoRow-Card-Content\">\n                        <Card.Title className=\"Card-Title\"><b>Interests - Travelling</b></Card.Title>\n                        <Card.Text>\n                            Another thing I like to do is to travel.\n                            In fact, whenever I get the chance, I would choose to solo travel to places\n                            I have never been before.\n                            The reason for this is because I find it to be the best way\n                            to truly immerse myself into the local culture the place has to offer.\n                            It's also a great way to put myself out of my comfort zone and enable myself\n                            to grow and improve in ways that I usually can't.\n                        </Card.Text>\n                        {/* <Button variant=\"primary\">Find out more!</Button> */}\n                    </Card.Body>\n                    <div className=\"image-container\">\n                    <Image className=\"InfoRow-Card-Image\" src={TravelPic} />\n                    </div>\n                </Card>\n                <Card className=\"InfoRow-Card Card-Left\">\n                    <div className=\"image-container\">\n                    <Image className=\"InfoRow-Card-Image\" src={StarCraftPic} />\n                    </div>\n                    <Card.Body className=\"InfoRow-Card-Content\">\n                        <Card.Title className=\"Card-Title\"><b>Interests - StarCraft II</b></Card.Title>\n                        <Card.Text>\n                            I am also an avid StarCraft II player and I started playing this game 2 years ago.\n                            Through StarCraft, I have improved my critical thinking, problem-solving, multitasking and organizational skills.\n                            Though I only started playing not too long ago, it has quickly grown to become my favorite game.\n                        </Card.Text>\n                        {/* <Button variant=\"primary\">Find out more!</Button> */}\n                    </Card.Body>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default InfoRow","import React from 'react';\nimport './Footer.css'\n\nclass Footer extends React.Component {\n    render() {\n        const footerItems = [\"Email\", \"LinkedIn\", \"GitHub\", \"Resume\"]\n\n        return (\n            <div className=\"Footer\">\n                <ul className=\"Footer-List\">\n                    <li className=\"Footer-Item\">\n                        <a className=\"links\" href=\"mailto:tan49@wisc.com\">\n                            Email\n                        </a>\n                    </li>\n                    <li className=\"Footer-Item\">\n                        <a className=\"links\" href=\"https://www.linkedin.com/in/leon-yl-tan\">\n                            LinkedIn\n                        </a>\n                    </li>\n                    <li className=\"Footer-Item\">\n                        <a className=\"links\" href=\"https://github.com/LeonTan828\">\n                            GitHub\n                        </a>\n                    </li>\n                    <li className=\"Footer-Item\">\n                        <a className=\"links\">\n                            Resume\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './Header'\nimport AppJumbotron from './AppJumbotron'\nimport InfoRow from './InfoRow'\nimport Footer from './Footer'\n\n// TODO: Display Text\n// TODO: Style Text\n// TODO: Display background image\n\nclass Display extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <AppJumbotron />\n                <InfoRow />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default Display;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Display from './HomePage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<Display />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}